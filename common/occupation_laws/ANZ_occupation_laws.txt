##id is used for localization
#example_law = {
#	#tooltip description for the law
#	tooltip = "loc_key"
#
#	#gfx entry & frame for law entry icon
#	#gfx entry can be omitted, in that case it will default to GFX_occupation_policy_icon_strip
#	icon = "GFX_icon:5"
#
#	#plays when the law is selected
#	sound_effect = "sound_effect"
#
#	#if a law is not visible, it won't show up in gui at all
#	#scope is occupier country, occupied country is not set (this is only check at country level, not target level)
#	visible = {
#		always = yes
#	}
#
#	#if a law is not available, it will show up in disable state ingui and won't be selectable
#	#scope is occupier country and from scope is occupied country
#	available = {
#		always = yes
#	}
#
#	#if a current modifier is no longer active (visible/available is false) it will fallback to this law
#	fallback_law = law_id
#
#	#main fallback modifier will be used when previous modifier is no longer active and there is no fallback_law, there must be exactly one fallback modifier
#	#if you are lacking manpower/equipments for your current laws, fallback modifier bonuses will apply instead (will lerp to fallback and at 0 manpower you will be forced to switch)
#	main_fallback_law = yes
#
#	#applies to states if the law is selected
#	state_modifier = {
#
#	}
#
#	#states with resistance supressed (at 0) will get this modifier instead (if defined)
#	suppressed_state_modifier = {
#
#	}
#
#	#by default laws are sorted by load order, gui_order can be used to reorder them in gui. by default it is 0
#	gui_order = 1
#
#	# score used for selecting a law for state
#	# scope is state
#	# from is occupier
#	# from from is occupied
#	# ai_desire_resource temp variables will be available for the triggers,
#	# which is a value in between 0-1 to show desire for a certain resource
#	# uncapped_resistance_target temp variable can be used for getting resistance that that is not capped to 0-100
#	# resistance_target_without_law temp variable can be used for accessing resistance target value that is not modifier by law
#	# garrison_min_support_ratio garrison_equipment_support_ratio garrison_manpower_support_ratio gives what ratio of the garrison factor we can support for current template and buffers
#	ai_will_do = {
#		base = 100
#
#		modifier = {
#			steel > 10
#			add = 100
#		}
#	}
#}

#TODO
ANZ_suppression_from_TAU_law = {
	icon = GFX_ANZ_suppression_from_TAU_law
	#sound_effect = "Martial_Law_Interface_Autonomous_Occupation_Unique_DEM"

	fallback_law = foreign_civilian_oversight

	visible = {
		original_tag = ANZ
		has_completed_focus = ANZ_suppression_from_TAU
		NOT = {
			has_completed_focus = ANZ_strengthen_control
			has_completed_focus = ANZ_partial_indulgence
		}
	}

	state_modifier = {
		resistance_target 				= -0.50
		compliance_gain 				= -0.03
		required_garrison_factor 		= -0.35
		local_factories 				= 0.10
		local_resources 				= 0.10
		local_manpower 					= 0.25
	}

	ai_will_do = {
		base = 250
		modifier = {
			check_variable  = { resistance_target_without_law > 0.3}
			add = 200
		}


		modifier = {
			check_variable  = { resistance_target_without_law > 0.44}

			set_temp_variable = { requirement_limit = 0.35 }
			if = {
				limit = { occupation_law = local_police_force_garrison }
				set_temp_variable = { requirement_limit = 0.55 }
			}
			check_variable = { garrison_min_support_ratio < requirement_limit }

			add = 350
		}
	}
}

#TODO
ANZ_suppression_from_TAU_law_2 = {
	icon = GFX_ANZ_suppression_from_TAU_law
	#sound_effect = "Martial_Law_Interface_Autonomous_Occupation_Unique_DEM"

	fallback_law = foreign_civilian_oversight

	visible = {
		original_tag = ANZ
		has_completed_focus = ANZ_strengthen_control
	}

	state_modifier = {
		resistance_target 				= -0.50
		compliance_gain 				= -0.03
		required_garrison_factor 		= -0.35
		local_factories 				= 0.20
		local_resources 				= 0.20
		local_manpower 					= 0.50
	}

	ai_will_do = {
		base = 250
		modifier = {
			check_variable  = { resistance_target_without_law > 0.3}
			add = 200
		}


		modifier = {
			check_variable  = { resistance_target_without_law > 0.44}

			set_temp_variable = { requirement_limit = 0.35 }
			if = {
				limit = { occupation_law = local_police_force_garrison }
				set_temp_variable = { requirement_limit = 0.55 }
			}
			check_variable = { garrison_min_support_ratio < requirement_limit }

			add = 350
		}
	}
}

#TODO
ANZ_suppression_from_TAU_law_3 = {
	icon = GFX_ANZ_suppression_from_TAU_law
	#sound_effect = "Martial_Law_Interface_Autonomous_Occupation_Unique_DEM"

	fallback_law = foreign_civilian_oversight

	visible = {
		original_tag = ANZ
		has_completed_focus = ANZ_partial_indulgence
	}

	state_modifier = {
		resistance_target 				= -0.50
		compliance_gain 				= 0.00
		required_garrison_factor 		= -0.35
		local_factories 				= 0.10
		local_resources 				= 0.10
		local_manpower 					= 0.25
	}

	ai_will_do = {
		base = 250
		modifier = {
			check_variable  = { resistance_target_without_law > 0.3}
			add = 200
		}


		modifier = {
			check_variable  = { resistance_target_without_law > 0.44}

			set_temp_variable = { requirement_limit = 0.35 }
			if = {
				limit = { occupation_law = local_police_force_garrison }
				set_temp_variable = { requirement_limit = 0.55 }
			}
			check_variable = { garrison_min_support_ratio < requirement_limit }

			add = 350
		}
	}
}