#计算影响力
IRIS_impact_settlement = {
    #清空影响力
    clear_array = global.IRIS_effect_list
    #添加所有国家
    every_country = {
        limit = {
            NOT = {
                OR = {
                    has_country_flag = country_region_collapsed_flag
					has_country_flag = has_Unmanned_area_flag
					has_country_flag = has_Wasteland_flag
					has_country_flag = has_Anarchy_flag
					has_country_flag = has_Regional_riots_flag
					has_country_flag = has_government_vacant_ocean_flag
                    TAG = WRQ
                    TAG = ANA
                    TAG = WST
                    TAG = ZTZ
                    TAG = RIR
                }
            }
            is_IRIS_TOUHOU_country = no
            is_IRIS_UB_country = no
            is_IRIS_LB_country = no
        }
        set_variable = {
            THIS.national_influence = THIS.num_of_factories
        }
        set_variable = {
            THIS.national_influence_2 = THIS.num_subjects
        }
        multiply_variable = {
            THIS.national_influence_2 = 0.007
        }
        set_variable = {
            THIS.national_influence_3 = THIS.num_owned_controlled_states
        }
        multiply_variable = {
            THIS.national_influence_3 = 0.001
        }
        set_variable = {
            THIS.national_influence_4 = THIS.national_influence_2
        }
        add_to_variable = {
            THIS.national_influence_4 = THIS.national_influence_3
        }
        if = {
            limit = {
                is_major = yes
            }
            multiply_variable = {
                THIS.national_influence_4 = 1.1
            }
        }
        if = {
            limit = {
                is_faction_leader = yes
            }
            multiply_variable = {
                THIS.national_influence_4 = 1.1
            }
        }
        # if = { #在派系里不进行计算
        #     limit = {
        #         is_in_faction = yes
        #     }
        #     multiply_variable = {
        #         THIS.national_influence_4 = 1.05
        #     }
        # }
        if = {
            limit = {
                is_puppet = yes
            }
            multiply_variable = {
                THIS.national_influence_4 = 0.7
            }
        }
        set_variable = {
            THIS.effect_tax_cap_2 = 1
        }
        add_to_variable = {
            THIS.effect_tax_cap_2 = modifier@effect_tax_cap
        }
        multiply_variable = {
            THIS.national_influence_4 = effect_tax_cap_2
        }
        multiply_variable = {
            THIS.national_influence = THIS.national_influence_4
        }
        multiply_variable = {
            THIS.national_influence = 100
        }
        add_to_array = {
            global.IRIS_effect_list = THIS
        }
    }
    #计算得分器
    get_sorted_scored_countries = {
        scorer = IRIS_effect_list_scorer
        array = global.IRIS_effect_list
    }
    #循环计算排名
    for_each_scope_loop = {
        array = global.IRIS_effect_list
        add_to_variable = {
            global.IRIS_effect_list_index = 1
        }
        set_variable = {
            IRIS_effect_list_2 = global.IRIS_effect_list_index
        }
    }
    clear_variable = global.IRIS_effect_list_index
    IRIS_refresh_troop_limit = yes
}


#计算核心整合 临时代码 以后再改 给TFD用
Integration_computing_cores = {
    every_state = {
        limit = {
            # occupation_law = territorial_integration
            is_controlled_by = TFD
            compliance > 80
            is_core_of = CNI
        }
        TFD = { add_state_core = PREV }
        # every_country = {
        #     limit = {
        #         controls_state = PREV
        #     }
        #     add_state_core = PREV
        # }
    }
}

#添加可整合核心 废除
add_integrable_core = {
    custom_effect_tooltip = integratable_regions

    add_to_array = {
        FROM.add_integrable_core = PREV
    }

    FROM = {
        set_country_flag = integratable_regions_yes
    }

    FROM.FROM = {
        custom_effect_tooltip = add_integrable_core_tooltip
        every_controlled_state = {
            set_occupation_law = integratable_regions
        }
    }
}

#添加可整合核心(废除)
add_integrable_core_xx = {
    custom_effect_tooltip = integratable_regions

    set_state_flag = integratable_regions_@FROM

    FROM.FROM = {
        custom_effect_tooltip = add_integrable_core_tooltip
        every_controlled_state = {
            set_occupation_law = integratable_regions
        }
    }
}

#再废弃
add_integrable_core_80 = {
    FROM = {
        set_temp_variable = { integrator_target = THIS }
    }
    if = {
        limit = { has_variable = integratable_regions_tag }
        if = {
            limit = { NOT = { check_variable = { can_integratable_regions@var:integratable_regions_tag = 80 } } }
            set_variable = { can_integratable_regions@var:integratable_regions_tag = 80 }
            if = {
                limit = {
                    is_controlled_by = var:integratable_regions_tag
                    compliance > 80
                }
                add_core_of = var:integratable_regions_tag
            }
        }
    }
    else = {
        if = {
            limit = {
                is_controlled_by = PREV
                compliance > 80
            }
            add_core_of = PREV
        }
    }
    FROM.FROM = {
        custom_effect_tooltip = add_integrable_core_tooltip
        every_controlled_state = {
            set_occupation_law = integratable_regions
        }
    }
}

#添加默认政策
default_policy = {
    every_possible_country = {
        if = {
            limit = {
                NOT = {
                    has_idea = xiaoshi24
                    has_idea = xiaoshi20
                    has_idea = xiaoshi16
                    has_idea = xiaoshi12
                    has_idea = xiaoshi8
                    has_idea = xiaoshi4
                    has_idea = kaibai
                }
            }
            add_ideas = xiaoshi12
        }
        if = {
            limit = {
                NOT = {
                    has_idea = jingzhiyure
                    has_idea = fadingyureshiduan_1
                    has_idea = fadingyureshiduan_2
                    has_idea = fadingyureshiduan_3
                    has_idea = quanminparty
                }
            }
            add_ideas = fadingyureshiduan_2
        }
        if = {
            limit = {
                NOT = {
                    has_idea = shuishoudengji_1
                    has_idea = shuishoudengji_2
                    has_idea = shuishoudengji_3
                    has_idea = shuishoudengji_4
                    has_idea = shuishoudengji_5
                }
            }
            add_ideas = shuishoudengji_3
        }
        if = {
            limit = {
                NOT = {
                    has_idea = ziyoufanren
                    has_idea = youxiantiaokong
                    has_idea = jihuajingji
                }
            }
            add_ideas = youxiantiaokong
        }
        if = {
            limit = {
                NOT = {
                    has_idea = jiaoyuxinsifa
                    has_idea = chengjiexinsifa
                    has_idea = congzhongchufa
                    has_idea = tongtongchuque
                }
            }
            add_ideas = chengjiexinsifa
        }
        if = {
            limit = {
                NOT = {
                    has_idea = zhuozhongbenguo
                    has_idea = youxianganshe
                    has_idea = quanqiudiyuanzhenzhi
                }
            }
            if = {
                limit = {
                    num_of_factories < 101
                    num_of_factories > 50
                }
                add_ideas = youxianganshe
            }
            else_if = {
                limit = {
                    num_of_factories > 100
                }
                add_ideas = quanqiudiyuanzhenzhi
            }
            else = {
                add_ideas = zhuozhongbenguo
            }
        }
        if = {
            limit = {
                NOT = {
                    has_idea = lujunyouxian
                    has_idea = junhenfazhan
                    has_idea = haijunyouxian
                }
            }
            if = {
                limit = {
                    OR = {
                        tag = UNG
                        tag = OCF
                        tag = OCE
                        tag = EIA
                        tag = INP
                        tag = SLL
                        tag = BLA
                        tag = USF
                        #tag = ANZ
                        tag = FNC
                    }
                }
                add_ideas = haijunyouxian
            }
            else_if = {
                limit = {
                    OR = {
                        #tag = ELN
                        tag = USR
                        tag = DOC
                        all_owned_state = {
                            is_coastal = no
                        }
                    }
                }
                add_ideas = lujunyouxian
            }
            else = {
                add_ideas = junhenfazhan
            }
        }
    }
}