WML_treasury_funds_add = {
	custom_effect_tooltip = IRIS_Improving_the_economy_situation_tt
	if = {
		limit = {
			has_idea = WML_idea_currency_reserve_0
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_0
			add_idea = WML_idea_currency_reserve_1
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_1
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_1
			add_idea = WML_idea_currency_reserve_2
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_2
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_2
			add_idea = WML_idea_currency_reserve_3
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_3
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_3
			add_idea = WML_idea_currency_reserve_4
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_4
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_4
			add_idea = WML_idea_currency_reserve_5
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_5
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_5
			add_idea = WML_idea_currency_reserve_6
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_6
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_6
			add_idea = WML_idea_currency_reserve_7
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_7
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_7
			add_idea = WML_idea_currency_reserve_8
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_8
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_8
			add_idea = WML_idea_currency_reserve_9
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_9
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_9
			add_idea = WML_idea_currency_reserve_10
		}
	}
	else = {
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_10
			add_idea = WML_idea_currency_reserve_11
		}
	}
}

WML_treasury_funds_del = {
	custom_effect_tooltip = IRIS_Deteriorate_the_economy_situation_tt
	if = {
		limit = {
			has_idea = WML_idea_currency_reserve_11
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_11
			add_idea = WML_idea_currency_reserve_10
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_10
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_10
			add_idea = WML_idea_currency_reserve_9
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_9
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_9
			add_idea = WML_idea_currency_reserve_8
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_8
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_8
			add_idea = WML_idea_currency_reserve_7
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_7
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_7
			add_idea = WML_idea_currency_reserve_6
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_6
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_6
			add_idea = WML_idea_currency_reserve_5
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_5
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_5
			add_idea = WML_idea_currency_reserve_4
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_4
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_4
			add_idea = WML_idea_currency_reserve_3
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_3
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_3
			add_idea = WML_idea_currency_reserve_2
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_2
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_2
			add_idea = WML_idea_currency_reserve_1
		}
	}
	else = {
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_1
			add_idea = WML_idea_currency_reserve_0
		}
	}
}

#刷新地区势力
WML_refresh_regional_power = {
	# set_variable = { ROOT.regional_error_calculation = 1 }
	# add_to_variable = { ROOT.regional_error_calculation = ROOT.modifier@wml_gangster_investigation_error }
	# random_list = {
	# 	#地区判定误差 默认50%误差
	# 	2 = {
	# 		#啥也不做
	# 	}
	# 	ROOT.regional_error_calculation = {#偏差 1
	# 		random_list = {
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var > 3
	# 					}
	# 				}
	# 				set_variable = { this.mini_gang = this.gang_var }
	# 				add_to_variable = { this.mini_gang = 1 }
	# 			}
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var < 2
	# 					}
	# 				}
	# 				set_variable = { this.mini_gang = this.gang_var }
	# 				add_to_variable = { this.mini_gang = -1 }
	# 			}
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var < 4
	# 					}
	# 				}
	# 				set_variable = { this.max_gang = this.gang_var }
	# 				add_to_variable = { this.max_gang = 1 }
	# 			}
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var > 1
	# 					}
	# 				}
	# 				set_variable = { this.max_gang = this.gang_var }
	# 				add_to_variable = { this.max_gang = -1 }
	# 			}
	# 		}
	# 	}
	# 	ROOT.regional_error_calculation = {#偏差 2
	# 		random_list = {
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var > 3
	# 					}
	# 				}
	# 				set_variable = { this.mini_gang = this.gang_var }
	# 				add_to_variable = { this.mini_gang = 1 }
	# 			}
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var < 2
	# 					}
	# 				}
	# 				set_variable = { this.mini_gang = this.gang_var }
	# 				add_to_variable = { this.mini_gang = -1 }
	# 			}
	# 		}
	# 		random_list = {
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var < 4
	# 					}
	# 				}
	# 				set_variable = { this.max_gang = this.gang_var }
	# 				add_to_variable = { this.max_gang = 1 }
	# 			}
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var > 1
	# 					}
	# 				}
	# 				set_variable = { this.max_gang = this.gang_var }
	# 				add_to_variable = { this.max_gang = -1 }
	# 			}
	# 		}
	# 	}
	# }
}

#刷新支持率GUI
WML_refresh_support_rate = {
	#绘制进度条
	#2号
	set_variable = { WML_progress_bar_profile_picture_2_var_frame = WML_progress_bar_profile_picture_2_var }
	add_to_variable = { WML_progress_bar_profile_picture_2_var_frame = WML_progress_bar_profile_picture_1_var }
	#3号
	set_variable = { WML_progress_bar_profile_picture_3_var_frame = WML_progress_bar_profile_picture_2_var_frame }
	add_to_variable = { WML_progress_bar_profile_picture_3_var_frame = WML_progress_bar_profile_picture_3_var }

	#计算胜利者
	set_variable = { WML_refresh_support_rate_winner = 1 }
	set_variable = { WML_refresh_support_rate_max = WML_progress_bar_profile_picture_1_var }
	if = {
		limit = { check_variable = { WML_progress_bar_profile_picture_2_var > WML_refresh_support_rate_max } }
		set_variable = { WML_refresh_support_rate_winner = 2 }
		set_variable = { WML_refresh_support_rate_max = WML_progress_bar_profile_picture_2_var }
	}
	if = {
		limit = { check_variable = { WML_progress_bar_profile_picture_3_var > WML_refresh_support_rate_max } }
		set_variable = { WML_refresh_support_rate_winner = 3 }
		set_variable = { WML_refresh_support_rate_max = WML_progress_bar_profile_picture_3_var }
	}
	if = {
		limit = { check_variable = { WML_progress_bar_profile_picture_4_var > WML_refresh_support_rate_max } }
		set_variable = { WML_refresh_support_rate_winner = 4 }
		set_variable = { WML_refresh_support_rate_max = WML_progress_bar_profile_picture_4_var }
	}
}


#调整腐败度
colony_adjust_degree_corruption = {
	custom_effect_tooltip = colony_adjust_degree_corruption_tt
	add_to_variable = { this.corrupt = temp_corrupt }
	if = {
		limit = { check_variable = { this.corrupt > 1 } }
		set_variable = { this.corrupt = 1 }
	}
	if = {
		limit = { check_variable = { this.corrupt < 0 } }
		set_variable = { this.corrupt = 0 }
	}
}

#调整黑帮影响
colony_adjust_influence_mafia = {
	custom_effect_tooltip = colony_adjust_influence_mafia_tt
	set_temp_variable = { temp_gang_influence_var_100 = temp_gang_influence_var }
	multiply_temp_variable = { temp_gang_influence_var_100 = 100 }
	add_to_variable = { this.gang_influence_var = temp_gang_influence_var_100 }
	colony_adjustment_gang_level_scale = yes #黑帮等级规模调整检测
	count_colony_regional_gang_influence_modifier = yes #计算地区黑帮势力
}

#调整金库储量
colony_adjust_treasury_reserves = {
	set_temp_variable = { temp_currency_reserve_current = this.currency_reserve }
	add_to_temp_variable = { temp_currency_reserve_current = temp_currency_reserve }
	if = {
		limit = { check_variable = { temp_currency_reserve_current > 1 } }
		add_to_temp_variable = { temp_currency_reserve_current = -1 }
		custom_effect_tooltip = colony_adjust_treasury_reserves_tt
		WML_treasury_funds_add = yes
	}
	if = {
		limit = { check_variable = { temp_currency_reserve_current < 0 } }
		add_to_temp_variable = { temp_currency_reserve_current = 1 }
		custom_effect_tooltip = colony_adjust_treasury_reserves_tt
		WML_treasury_funds_del = yes
	}
	else = {
		custom_effect_tooltip = colony_adjust_treasury_reserves_tt
	}
	set_variable = { this.currency_reserve = temp_currency_reserve_current }
}

#计算地区黑帮势力
count_colony_regional_gang_influence_modifier = {
	#街角鬣狗 (正面)
	if = {
		limit = { check_variable = { this.gang_var = 1 } }
		set_temp_variable = { colony_regional_gang_influence_modifier_temp = 100 }
		subtract_from_temp_variable = { colony_regional_gang_influence_modifier_temp = this.gang_influence_var }

		set_variable = { this.colony_regional_gang_influence_modifier_local_building_slots_factor = colony_regional_gang_influence_modifier_temp }
		set_variable = { this.colony_regional_gang_influence_modifier_local_supplies = colony_regional_gang_influence_modifier_temp }
		set_variable = { this.colony_regional_gang_influence_modifier_state_production_speed_buildings_factor = colony_regional_gang_influence_modifier_temp }


		divide_variable = { this.colony_regional_gang_influence_modifier_local_building_slots_factor = 337.5 }
		divide_variable = { this.colony_regional_gang_influence_modifier_state_production_speed_buildings_factor = 450 }
		divide_variable = { this.colony_regional_gang_influence_modifier_local_supplies = 675 }
	}
	else = {

		set_temp_variable = { colony_regional_gang_influence_modifier_temp = this.gang_var }
		subtract_from_temp_variable = { colony_regional_gang_influence_modifier_temp = 2 }
		multiply_temp_variable = { colony_regional_gang_influence_modifier_temp = -100 }
		subtract_from_temp_variable = { colony_regional_gang_influence_modifier_temp = this.gang_influence_var }

		set_variable = { this.colony_regional_gang_influence_modifier_local_building_slots_factor = colony_regional_gang_influence_modifier_temp }
		set_variable = { this.colony_regional_gang_influence_modifier_local_supplies = colony_regional_gang_influence_modifier_temp }
		set_variable = { this.colony_regional_gang_influence_modifier_state_production_speed_buildings_factor = colony_regional_gang_influence_modifier_temp }

		divide_variable = { this.colony_regional_gang_influence_modifier_local_building_slots_factor = 450 }
		divide_variable = { this.colony_regional_gang_influence_modifier_state_production_speed_buildings_factor = 500 }
		divide_variable = { this.colony_regional_gang_influence_modifier_local_supplies = 900 }
	}
}

#黑帮等级规模调整检测
colony_adjustment_gang_level_scale = {
	#减少
	if = {
		limit = { check_variable = { this.gang_influence_var < 0 } }
		if = {
			limit = { check_variable = { this.gang_var > 1 } }
			add_to_variable = { this.gang_var = -1 }
			set_variable = { this.colony_adjustment_gang_level_scale_var = this.gang_influence_var }
			set_variable = { this.gang_influence_var = 100 }
			add_to_variable = { this.gang_influence_var = this.colony_adjustment_gang_level_scale_var }
		}
		else = {
			set_variable = { this.gang_influence_var = 0 }
		}
	}
	#增加
	if = {
		limit = { check_variable = { this.gang_influence_var > 100 } }
		if = {
			limit = { check_variable = { this.gang_var < 4 } }
			add_to_variable = { this.gang_var = 1 }
			add_to_variable = { this.gang_influence_var = -100 }
		}
		else = {
			set_variable = { this.gang_influence_var = 100 }
		}
	}
}

#每月修正计算
colony_monthly_correction_calculation = {
	#每月资金
	set_temp_variable = { temp_colony_monthly_funding_factor = modifier@colony_monthly_funding_factor }
	add_to_temp_variable = { temp_colony_monthly_funding_factor = 1 }
	set_temp_variable = { temp_colony_monthly_funding = modifier@colony_monthly_funding }
	if = {
		limit = {
			check_variable = { temp_colony_monthly_funding > 0 } #大于0才会修正
		}
		multiply_temp_variable = { temp_colony_monthly_funding = temp_colony_monthly_funding_factor }
	}
	# add_to_variable = { root.currency_reserve = temp_colony_monthly_funding }
	set_temp_variable = { temp_currency_reserve = temp_colony_monthly_funding }
	colony_adjust_treasury_reserves = yes
	#检测是否调整金库储量
	#抬高储量
	if = {
		limit = { check_variable = { root.currency_reserve > 1 } }
		add_to_variable = { root.currency_reserve = -1 }
		# custom_effect_tooltip = colony_adjust_treasury_reserves_tt
		WML_treasury_funds_add = yes
	}
	#降低储量
	if = {
		limit = { check_variable = { temp_currency_reserve_current < 0 } }
		add_to_variable = { temp_currency_reserve_current = 1 }
		# custom_effect_tooltip = colony_adjust_treasury_reserves_tt
		WML_treasury_funds_del = yes
	}

	#地区
	if = {
		limit = {
			or = {
				not = { check_variable = { modifier@colony_gangster_influence_region = 0 } }
				not = { check_variable = { modifier@colony_corruption_region = 0 } }
			}
		}
		random_owned_state = {
			limit = { colony_executable_region = yes }
			#每月黑帮影响力
			set_temp_variable = { temp_colony_gangster_influence_region = root.modifier@colony_gangster_influence_region }
			# multiply_temp_variable = { temp_colony_gangster_influence_region = 100 }
			# add_to_variable = { this.gang_influence_var = temp_colony_gangster_influence_region }
			set_temp_variable = { temp_gang_influence_var = temp_colony_gangster_influence_region }
			colony_adjust_influence_mafia = yes

			#每月腐败度
			# set_temp_variable = { temp_colony_corruption_region = modifier@colony_corruption_region }
			# add_to_variable = { this.gang_influence_var = modifier@colony_corruption_region }
			set_temp_variable = { temp_corrupt = root.modifier@colony_corruption_region }
			colony_adjust_degree_corruption = yes
		}
	}
	#全国
	if = {
		limit = {
			or = {
				not = { check_variable = { modifier@colony_gangster_influence_nationwide = 0 } }
				not = { check_variable = { modifier@colony_corruption_nationwide = 0 } }
			}
		}
		every_owned_state = {
			limit = { colony_executable_region = yes }
			#每月黑帮影响力
			set_temp_variable = { temp_colony_gangster_influence_nationwide = root.modifier@colony_gangster_influence_nationwide }
			# multiply_temp_variable = { temp_colony_gangster_influence_nationwide = 100 }
			# add_to_variable = { this.gang_influence_var = temp_colony_gangster_influence_nationwide }
			set_temp_variable = { temp_gang_influence_var = temp_colony_gangster_influence_nationwide }
			colony_adjust_influence_mafia = yes

			#每月腐败度
			set_temp_variable = { temp_corrupt = root.modifier@colony_corruption_nationwide }
			colony_adjust_degree_corruption = yes
		}
	}
}

#往仓库里添加
colony_add_to_warehouse = {
	add_to_array = { root.colony_warehouse_array = temp_warehouse_var }
	custom_effect_tooltip = colony_add_to_warehouse_tt
}

#所有政策的所需时间
WML_required_time_for_all_policies = {
	set_variable = { colony_policy_days_0 = 14 }
	set_variable = { colony_policy_days_1 = 21 }
}

#地区政策点击
WML_policy_btn_click_0 = {
	set_temp_variable = { temp_corrupt = -0.05 }
	colony_adjust_degree_corruption = yes
}
WML_policy_btn_click_1 = {
	set_temp_variable = { temp_gang_influence_var = -0.05 }
	colony_adjust_influence_mafia = yes
}

#加入WML利益圈子
WML_become_stakeholder_countries = {
	diplomatic_relation = {
		country = WML
		relation = non_aggression_pact
	}
	give_guarantee = WML
	WML = {
		give_military_access = PREV
	}
	custom_effect_tooltip = WML_become_stakeholder_countries_tt
	add_to_array = { global.WML_stakeholder_countries_array = this }

	#计算是否移除修正
	set_temp_variable = { temp_colony_reduce_influence_by_half = EML } #要反过来
	colony_increased_influence = yes
}
#加入EML利益圈子
EML_become_stakeholder_countries = {
	diplomatic_relation = {
		country = EML
		relation = non_aggression_pact
	}
	give_guarantee = EML
	EML = {
		give_military_access = PREV
	}
	custom_effect_tooltip = EML_become_stakeholder_countries_tt
	add_to_array = { global.EML_stakeholder_countries_array = this }

	#计算是否移除修正
	set_temp_variable = { temp_colony_reduce_influence_by_half = WML } #要反过来
	colony_increased_influence = yes
}
#移除WML利益圈子
WML_remove_stakeholder_countries = {
	diplomatic_relation = {
		country = WML
		relation = non_aggression_pact
		active = no
	}
	diplomatic_relation = {
		country = WML
		relation = guarantee
		active = no
	}
	this = {
		diplomatic_relation = {
			country = WML
			relation = military_access
			active = no
		}
	}
	custom_effect_tooltip = WML_remove_stakeholder_countries_tt
	remove_from_array = { global.WML_stakeholder_countries_array = this }

	#计算是否移除修正
	set_temp_variable = { temp_colony_reduce_influence_by_half = EML } #要反过来
	colony_reduce_influence_by_half = yes
}
#移除EML利益圈子
EML_remove_stakeholder_countries = {
	diplomatic_relation = {
		country = EML
		relation = non_aggression_pact
		active = no
	}
	diplomatic_relation = {
		country = EML
		relation = guarantee
		active = no
	}
	this = {
		diplomatic_relation = {
			country = EML
			relation = military_access
			active = no
		}
	}
	custom_effect_tooltip = EML_remove_stakeholder_countries_tt
	remove_from_array = { global.EML_stakeholder_countries_array = this }

	#计算是否移除修正
	set_temp_variable = { temp_colony_reduce_influence_by_half = WML } #要反过来
	colony_reduce_influence_by_half = yes
}

#影响力砍半
colony_reduce_influence_by_half = {
	meta_effect = {
		text = {
			if = {
				limit = {
					is_in_array = {
						array = global.[V]_stakeholder_countries_array
						value = this
					}
				}
				this = {
					set_temp_variable = { temp_WML_remove_stakeholder_countries = Meleti_Legation_modifier_consumer_goods_factor }
					multiply_temp_variable = { temp_WML_remove_stakeholder_countries = -0.5 }
					set_temp_variable = { temp_WML_remove_stakeholder_countries_2 = Meleti_Legation_modifier_trade_opinion_factor }
					multiply_temp_variable = { temp_WML_remove_stakeholder_countries_2 = -0.5 }
					custom_effect_tooltip = {
						localization_key = IRIS_added_effect
						MODIFIERS = Meleti_Legation_modifier
					}
					add_to_variable = {
						Meleti_Legation_modifier_consumer_goods_factor = temp_WML_remove_stakeholder_countries
						tooltip = consumer_goods_factor_tt
					}
					add_to_variable = {
						Meleti_Legation_modifier_trade_opinion_factor = temp_WML_remove_stakeholder_countries_2
						tooltip = trade_opinion_factor_tt
					}
				}
			}
			else = {
				this = {
					remove_dynamic_modifier = {
						modifier = Meleti_Legation_modifier
					}
				}
			}
		}
		V = "[?temp_colony_reduce_influence_by_half.GetTag]"
	}
}

#影响力翻倍
colony_increased_influence = {
	meta_effect = {
		text = {
			if = {
				limit = {
					is_in_array = {
						array = global.[V]_stakeholder_countries_array
						value = this
					}
				}
				this = {
					set_temp_variable = { temp_WML_remove_stakeholder_countries = Meleti_Legation_modifier_consumer_goods_factor }
					set_temp_variable = { temp_WML_remove_stakeholder_countries_2 = Meleti_Legation_modifier_trade_opinion_factor }
					custom_effect_tooltip = {
						localization_key = IRIS_added_effect
						MODIFIERS = Meleti_Legation_modifier
					}
					add_to_variable = {
						Meleti_Legation_modifier_consumer_goods_factor = temp_WML_remove_stakeholder_countries
						tooltip = consumer_goods_factor_tt
					}
					add_to_variable = {
						Meleti_Legation_modifier_trade_opinion_factor = temp_WML_remove_stakeholder_countries_2
						tooltip = trade_opinion_factor_tt
					}
				}
			}
			else = {
				this = {
					add_dynamic_modifier = {
						modifier = Meleti_Legation_modifier
					}
					custom_effect_tooltip = {
						localization_key = IRIS_added_effect
						MODIFIERS = Meleti_Legation_modifier
					}
					add_to_variable = {
						Meleti_Legation_modifier_consumer_goods_factor = -0.05
						tooltip = consumer_goods_factor_tt
					}
					add_to_variable = {
						Meleti_Legation_modifier_trade_opinion_factor = 0.25
						tooltip = trade_opinion_factor_tt
					}
				}
			}
		}
		V = "[?temp_colony_increased_influence.GetTag]"
	}
}

#每日刷新
WML_daily_refres = {
	#地区政策刷新
	371 = {
		WML_regional_policy_refresh = yes
	}
	887 = {
		WML_regional_policy_refresh = yes
	}
	888 = {
		WML_regional_policy_refresh = yes
	}
	340 = {
		WML_regional_policy_refresh = yes
	}
	348 = {
		WML_regional_policy_refresh = yes
	}
	374 = {
		WML_regional_policy_refresh = yes
	}
	890 = {
		WML_regional_policy_refresh = yes
	}
	889 = {
		WML_regional_policy_refresh = yes
	}
}
#地区政策刷新
WML_regional_policy_refresh = {
	if = {
		limit = { has_state_flag = state_perform_policy_flag }
		add_to_variable = { this.policy_days_remaining = 1 }
		set_variable = { this.policy_days_remaining_percentage = this.policy_days_remaining } #进度条
		divide_variable = { this.policy_days_remaining_percentage = this.policy_days }
		multiply_variable = { this.policy_days_remaining_percentage = 100 }
		set_variable = { this.policy_days_remaining_2 = this.policy_days }
		subtract_from_variable = { this.policy_days_remaining_2 = this.policy_days_remaining }

		if = {
			limit = { check_variable = { this.policy_days_remaining = this.policy_days } }
			clr_state_flag = state_perform_policy_flag
			set_variable = { this.policy_days_remaining_percentage = 0 } #进度条归零
			if = {
				limit = {
					owner = {
						or = {
							tag = WML
							tag = EML
						}
					}
				}
				meta_effect = {
					text = {
						WML_policy_btn_click_[V] = yes
					}
					V = "[?this.implement_policies]"
				}
			}
		}
	}
	else = {
		set_variable = { this.policy_days_remaining_percentage = 0 } #进度条归零
		clear_array = this.policy_frame_array #清除判定第几帧数组
		for_loop_effect = {
			end = ROOT.policy_array^num
			add_to_array = { this.policy_frame_array = 2 }
		}
	}
	count_colony_regional_gang_influence_modifier = yes #计算地区黑帮势力
}