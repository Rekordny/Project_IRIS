#	Example:
# 
#	example_dynamic_modifier = {
#		icon = "GFX_idea_unknown" # optional, will show up in guis if icon is specified
#		enable = { always = yes } #optional, the modifier won't apply if not enabled
#		remove_trigger = { always = no } #optional, will remove the modifier if true
#       attacker_modifier = no  # if yes this modifier will also be read in combat for 
#                               # people engaging in the combat even if not in the state
#
#		# list of modifiers
#		fuel_cost = 321
#		max_fuel = var_max_fuel # will be taken from a variable
#	}
#
#
#	In a script file:
#
#	effect = {
#		add_dynamic_modifier = {
#			modifier = example_dynamic_modifier
#			scope = GER # optional, if you specify this your dynamic modifier scoped to this scope (root is the effect scope)
#			days = 14 # optional, will be removed after this many days passes
#		}
#	}
#
#	can be added to countries, states or unit leaders
#	will only updated daily, unless forced by force_update_dynamic_modifier effect

speed_TP_1 = {
	enable = { always = yes }
	
	icon = GFX_portal_icon
	
	army_speed_factor_for_controller = 999
	state_production_speed_bunker_factor = -999
	state_production_speed_coastal_bunker_factor = -999
}
speed_TP_0 = {
	enable = { always = yes }
	
	icon = GFX_portal_icon
	
	army_speed_factor = 999
}

#地脉政策动态加成，于scripted_effect控制
domain_policies_modifier = {
	enable = { always = yes }
	monthly_population = ROOT.final_multiplier
	local_resources_factor = ROOT.final_multiplier
}

#超出部队惩罚
IRIS_exceeding_military_punishment_modifier = {
	enable = { always = yes }
	remove_trigger = { NOT = { check_variable = { num_battalions > max_divisions } } }
	army_org_factor = troops_exceed_negative_calculation_army_org_factor
	consumer_goods_expected_value = troops_exceed_negative_calculation_consumer_goods_expected_value
	land_reinforce_rate = troops_exceed_negative_calculation_consumer_land_reinforce_rate
	training_time_army_factor = troops_exceed_negative_calculation_consumer_training_time_army_factor

	ai_desired_divisions_factor = troops_exceed_negative_calculation_consumer_ai_desired_divisions_factor 
}
